
module adder64_bit(input1, input2, carry_in, out);

	parameter N = 64;
	
	input carry_in;
	
	input [N-1:0] input1, input2;
	
	output [N-1:0] out;
	
	wire carry_out;
	
	wire [N-1:0] c;
	
	genvar i;
	
	generate 
		for(i = 0; i < N; i++) begin : generate_64_bit_adder
		
			if(i == 0) begin
				fullAdder fA(.a(input1[0]), .b(input2[0]), .cin(carry_in), .sum(out[0]), .cout(c[0]));
			end
			else begin
				fullAdder fA(.a(input1[i]), .b(input2[i]), .cin(c[i-]), .sum(out[i]), .cout(c[i]));
			end
			
		end
		
		assign carry_out = c[N-1];
		
	endgenerate


endmodule


